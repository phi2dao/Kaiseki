$: << '.'

module Kaiseki
	autoload :AndPredicate,			'grammar/and_predicate'
	autoload :ArrayResult,			'grammar/array_result'
	autoload :EOFParslet,			'grammar/eof_parslet'
	autoload :Grammar,				'grammar/grammar'
	autoload :GrammarNode,			'grammar/grammar_node'
	autoload :LocationTracking,		'grammar/location_tracking'
	autoload :LogNode,				'grammar/log_node'
	autoload :Node,					'grammar/node'
	autoload :NotPredicate,			'grammar/not_predicate'
	autoload :ParseError,			'grammar/parse_error'
	autoload :ParseLogger,			'grammar/parse_logger'
	autoload :ParseResult,			'grammar/parse_result'
	autoload :Parslet,				'grammar/parslet'
	autoload :ParsletChoice,		'grammar/parslet_choice'
	autoload :ParsletCombination,	'grammar/parslet_combination'
	autoload :ParsletCombining,		'grammar/parslet_combining'
	autoload :ParsletLogging,		'grammar/parslet_logging'
	autoload :ParsletMerger,		'grammar/parslet_merger'
	autoload :ParsletOmission,		'grammar/parslet_omission'
	autoload :ParsletRepetition,	'grammar/parslet_repetition'
	autoload :ParsletSequence,		'grammar/parslet_sequence'
	autoload :Predicate,			'grammar/predicate.rb'
	autoload :ProcParslet,			'grammar/proc_parslet'
	autoload :RegexpParslet,		'grammar/regexp_parslet'
	autoload :Stream,				'grammar/stream'
	autoload :StringParslet,		'grammar/string_parslet'
	autoload :StringResult,			'grammar/string_result'
	autoload :SymbolParslet,		'grammar/symbol_parslet'
end

require 'additions/proc'
require 'additions/regexp'
require 'additions/string'
require 'additions/symbol'